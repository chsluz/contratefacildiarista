<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui">

<h:head></h:head>
<body>
	<script src="https://www.gstatic.com/firebasejs/4.2.0/firebase.js"></script>
	<script src="https://www.gstatic.com/firebasejs/4.1.1/firebase-app.js"></script>
	<script src="https://www.gstatic.com/firebasejs/4.1.1/firebase-auth.js"></script>

	<script>
		// Initialize Firebase
		var config = {
			apiKey : "AIzaSyBVfcPnHvNli_y2b9qeYKcIv6keSRGjEc8",
			authDomain : "contratediarista-64f5f.firebaseapp.com",
			databaseURL : "https://contratediarista-64f5f.firebaseio.com",
			projectId : "contratediarista-64f5f",
			storageBucket : "contratediarista-64f5f.appspot.com",
			messagingSenderId : "166088401573"
		};
		firebase.initializeApp(config);
	</script>
	<script type="text/javascript">
			function logar() {
				if (firebase.auth().currentUser != null) {
					firebase.auth().signOut().then(function() {
						  // Sign-out successful.
						}, function(error) {
							var errorCode = error.code;
					        var errorMessage = error.message;
					        console.log(errorCode);
					        console.log(errorMessage);
						});
			      } 
		        var email = document.getElementById('email').value;
       			var password = document.getElementById('senha').value;
		        firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {
		          // Handle Errors here.
		          var errorCode = error.code;
		          var errorMessage = error.message;
		          // [START_EXCLUDE]
		          if (errorCode === 'auth/wrong-password') {
		        	 	 $("#idErroLogin").val('auth/wrong-password');
		        	 	erroLogin();
				    console.log(error);
		          }
		          else if(errorCode == 'auth/user-not-found') {
		        	  	$("#idErroLogin").val('auth/user-not-found');
		        	  	erroLogin();
				    console.log(error);
			      }
		           else {
		            $("#idErroLogin").val(error.message);
		            erroLogin();
			        console.log(error);
		          }
		          
		          // [END_EXCLUDE]
		        });

		        sleep(500).then(() => {
		        		var user = firebase.auth().currentUser;
			        if(user != null) {
				        console.log(user.uid)
				        $("#idUsuario").val(user.uid);
				        logarUsuario();
			        }
			        else {
				        console.log('usuario vazio');
				    }
				}); 
		        
			}

			function sleep(ms) {
				  return new Promise(resolve => setTimeout(resolve, ms));
			}

			function createLogin() {
				var email = document.getElementById('emailCadastro').value;
				var password = document.getElementById('senhaCadastro').value;
				if(firebase.auth().currentUser == null) {
					firebase.auth().createUserWithEmailAndPassword(email, password)
				    .catch(function(error) {
					  // Handle Errors here.
					  var errorCode = error.code;
					  var errorMessage = error.message;
					  if (errorCode == 'auth/weak-password') {
					    alert('The password is too weak.');
					  } else {
					    alert(errorMessage);
					  }
					  console.log(error);
					});
					 var user = firebase.auth().currentUser;
					 if(user != null) {
			        		$("#idUsuario").val(user.uid);
			        		criarUsuario();
					 }
				}
			}
	</script>
	<h:form prependId="false">
		<p:growl autoUpdate="true" id="mensagem" />
		<h:inputHidden
			id="idErroLogin"
			value="#{loginBean.msgErro}" />
		<h:inputHidden
			id="idUsuario"
			value="#{loginBean.idUsuario}" />
		<p:remoteCommand
			name="erroLogin"
			actionListener="#{loginBean.exibirMensagemErro()}"/>
		<p:remoteCommand
			name="logarUsuario"
			actionListener="#{loginBean.logar()}">
		</p:remoteCommand>
		<p:remoteCommand
			name="criarUsuario"
			actionListener="#{loginBean.salvar()}">
		</p:remoteCommand>
		<p:panel style="width: 500px">
			<div align="center">
				<h:panelGrid columns="2">
					<h:outputText value="Email:" />
					<p:inputText
						id="email"
						placeholder="teste@teste.com" />
					<h:outputText value="Senha:" />
					<p:password
						id="senha"
						placeholder="********" />
				</h:panelGrid>
				<h:panelGrid columns="2">
					<p:commandButton
						update="mensagem"
						onclick="logar()"
						value="Logar" />
					<p:commandLink
						onstart="PF('dgCadastroUsuario').show()"
						value="Novo? Cadastre-se"
						action="#{loginBean.cadastrarNovo()}" />
				</h:panelGrid>
			</div>
		</p:panel>
	</h:form>
	<p:dialog
		header="Cadastrar novo Usuario"
		widgetVar="dgCadastroUsuario"
		width="600px"
		position="left top"
		resizable="false"
		closable="false"
		height="500px;"
		minHeight="40">
		<h:form prependId="false">
			<h:panelGrid columns="2">
				<h:outputText value="Email:" />
				<p:inputText
					id="emailCadastro"
					placeholder="teste@teste.com" />
				<h:outputText value="Senha:" />
				<p:password
					id="senhaCadastro"
					placeholder="********" />
				<h:outputText value="Nome:" />
				<p:inputText
					value="#{loginBean.usuario.nome}"
					id="nome"
					placeholder="JoÃ£o da Silva" />
				<h:outputText value="Cpf:" />
				<p:inputMask
					value="#{loginBean.usuario.cpf}"
					id="cpf"
					mask="999.999.999-99"
					placeholder="999.999.999-99" />
				<h:outputText value="Tipo de Usuario:" />
				<p:selectOneMenu
					value="#{loginBean.usuario.tipoUsuario}"
					style="width:175px">
					<f:selectItems
						value="#{loginBean.tiposUsuario}"
						var="tipo"
						itemLabel="#{tipo.descricao}"
						itemValue="#{tipo}" />
				</p:selectOneMenu>
			</h:panelGrid>
			<h:panelGrid columns="2">
				<p:commandButton
					onclick="PF('dgCadastroUsuario').hide()"
					value="Cancelar" />
				<p:commandButton
					onclick="createLogin()"
					value="Salvar" />
			</h:panelGrid>
		</h:form>
	</p:dialog>
</body>
</html>
